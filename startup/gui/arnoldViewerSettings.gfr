import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 62, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ViewerSettings"] = Gaffer.Box( "ViewerSettings" )
parent.addChild( __children["ViewerSettings"] )
__children["ViewerSettings"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["ViewerSettings"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["ViewerSettings"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["ViewerSettings"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.StringPlug( "shading", defaultValue = 'flat', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.NameSwitch( "ShadingSwitch" ) )
__children["ViewerSettings"]["ShadingSwitch"].setup( GafferScene.ScenePlug( "value", ) )
__children["ViewerSettings"]["ShadingSwitch"]["in"].addChild( Gaffer.NameValuePlug( "", GafferScene.ScenePlug( "value", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "in2", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ViewerSettings"]["ShadingSwitch"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ShaderAssignment( "FlatAssignment" ) )
__children["ViewerSettings"]["FlatAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Dot( "Dot" ) )
__children["ViewerSettings"]["Dot"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Dot( "Dot1" ) )
__children["ViewerSettings"]["Dot1"].setup( GafferScene.ScenePlug( "in", ) )
__children["ViewerSettings"]["Dot1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldShader( "Flat" ) )
__children["ViewerSettings"]["Flat"].loadShader( "utility" )
__children["ViewerSettings"]["Flat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldShader( "UserDataRgb" ) )
__children["ViewerSettings"]["UserDataRgb"].loadShader( "user_data_rgb" )
__children["ViewerSettings"]["UserDataRgb"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.ShaderAssignment( "PreviewAssignment" ) )
__children["ViewerSettings"]["PreviewAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldShader( "Preview" ) )
__children["ViewerSettings"]["Preview"].loadShader( "utility" )
__children["ViewerSettings"]["Preview"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldOptions( "SubdivisionOptions" ) )
__children["ViewerSettings"]["SubdivisionOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.StringPlug( "device", defaultValue = 'CPU', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.DeleteOptions( "DeleteOptions" ) )
__children["ViewerSettings"]["DeleteOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldAttributes( "SubdivisionAttributes" ) )
__children["ViewerSettings"]["SubdivisionAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldOptions( "LightingOptions" ) )
__children["ViewerSettings"]["LightingOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.StringPlug( "lighting", defaultValue = 'direct', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Backdrop( "Backdrop" ) )
__children["ViewerSettings"]["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Spreadsheet( "LightingSpreadsheet" ) )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "ai:GI_total_depth", Gaffer.IntPlug( "value", defaultValue = 10, ), False, "giTotalDepth", Gaffer.Plug.Flags.Default ), adoptEnabledPlug = True )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"].addRows( 2 )
__children["ViewerSettings"]["LightingSpreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldOptions( "SamplingOptions" ) )
__children["ViewerSettings"]["SamplingOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Backdrop( "Backdrop3" ) )
__children["ViewerSettings"]["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.AttributeQuery( "AttributeQuery" ) )
__children["ViewerSettings"]["AttributeQuery"].setup( Gaffer.IntPlug( "value", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, ) )
__children["ViewerSettings"]["AttributeQuery"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Expression( "Expression" ) )
__children["ViewerSettings"]["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 1, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 1, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoolPlug( "enableSubdivision", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.IntPlug( "maxSubdivIterations", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.BoolPlug( "enableDisplacement", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferArnold.ArnoldAttributes( "GlobalSubdivisionAttributes" ) )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( GafferScene.DeleteAttributes( "DisableDisplacement" ) )
__children["ViewerSettings"]["DisableDisplacement"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Expression( "Expression1" ) )
__children["ViewerSettings"]["Expression1"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression1"]["__out"].addChild( Gaffer.BoolPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"].addChild( Gaffer.Expression( "Expression2" ) )
__children["ViewerSettings"]["Expression2"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression2"]["__in"].addChild( Gaffer.BoolPlug( "p1", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression2"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 1, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ViewerSettings"]["Expression2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 41085 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
__children["ViewerSettings"]["__uiPosition"].setValue( imath.V2f( -14.1733398, 4.31429148 ) )
__children["ViewerSettings"]["BoxIn"]["__in"].setInput( __children["ViewerSettings"]["in"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["ViewerSettings"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -5.69273949, 33.6189842 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'description', 'The processed output scene.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["in"], 'layout:index', 0 )
__children["ViewerSettings"]["BoxOut"]["in"].setInput( __children["ViewerSettings"]["DeleteOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["BoxOut"]["__out"], 'noduleLayout:spacing', 2.0 )
__children["ViewerSettings"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -2.69273949, -149.695114 ) )
__children["ViewerSettings"]["out"].setInput( __children["ViewerSettings"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Flat', 'flat' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Preview', 'preview' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["shading"], 'preset:Full', 'full' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"], 'annotation:user:text', 'Todo : Can we improve the "Preview" shading mode to use assignments made via USD\'s "preview" material purpose, including support for UsdPreviewSurface?' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["ViewerSettings"]["ShadingSwitch"]["__index"].setInput( __children["ViewerSettings"]["ShadingSwitch"]["__outIndex"] )
__children["ViewerSettings"]["ShadingSwitch"]["selector"].setInput( __children["ViewerSettings"]["shading"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"]["in"], 'noduleLayout:section', 'top' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][0]["name"].setValue( '*' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][0]["value"].setInput( __children["ViewerSettings"]["Dot1"]["out"] )
__children["ViewerSettings"]["ShadingSwitch"]["in"][1]["name"].setValue( 'flat' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][1]["value"].setInput( __children["ViewerSettings"]["FlatAssignment"]["out"] )
__children["ViewerSettings"]["ShadingSwitch"]["in"][2]["name"].setValue( 'preview' )
__children["ViewerSettings"]["ShadingSwitch"]["in"][2]["value"].setInput( __children["ViewerSettings"]["PreviewAssignment"]["out"] )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["ShadingSwitch"]["out"], 'noduleLayout:section', 'bottom' )
__children["ViewerSettings"]["ShadingSwitch"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -26.6222305 ) )
__children["ViewerSettings"]["FlatAssignment"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["FlatAssignment"]["shader"].setInput( __children["ViewerSettings"]["Flat"]["out"] )
__children["ViewerSettings"]["FlatAssignment"]["__uiPosition"].setValue( imath.V2f( -5.69273949, 9.88680363 ) )
__children["ViewerSettings"]["Dot"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["Dot"]["__uiPosition"].setValue( imath.V2f( -29.2354755, 16.7868004 ) )
__children["ViewerSettings"]["Dot1"]["in"].setInput( __children["ViewerSettings"]["Dot"]["out"] )
__children["ViewerSettings"]["Dot1"]["__uiPosition"].setValue( imath.V2f( -29.2354755, -19.2901993 ) )
__children["ViewerSettings"]["Flat"]["parameters"]["color"].setInput( __children["ViewerSettings"]["UserDataRgb"]["out"] )
__children["ViewerSettings"]["Flat"]["parameters"]["ao_distance"].setValue( 10.0 )
__children["ViewerSettings"]["Flat"]["__uiPosition"].setValue( imath.V2f( -19.6341476, 9.88680363 ) )
__children["ViewerSettings"]["UserDataRgb"]["parameters"]["attribute"].setValue( 'Cs' )
__children["ViewerSettings"]["UserDataRgb"]["parameters"]["default"]["r"].setValue( 0.699999988079071 )
__children["ViewerSettings"]["UserDataRgb"]["parameters"]["default"]["g"].setInput( __children["ViewerSettings"]["UserDataRgb"]["parameters"]["default"]["r"] )
__children["ViewerSettings"]["UserDataRgb"]["parameters"]["default"]["b"].setInput( __children["ViewerSettings"]["UserDataRgb"]["parameters"]["default"]["r"] )
__children["ViewerSettings"]["UserDataRgb"]["__uiPosition"].setValue( imath.V2f( -31.9539719, 29.0450325 ) )
__children["ViewerSettings"]["PreviewAssignment"]["in"].setInput( __children["ViewerSettings"]["BoxIn"]["out"] )
__children["ViewerSettings"]["PreviewAssignment"]["shader"].setInput( __children["ViewerSettings"]["Preview"]["out"] )
__children["ViewerSettings"]["PreviewAssignment"]["__uiPosition"].setValue( imath.V2f( 22.8108902, 9.98861408 ) )
__children["ViewerSettings"]["Preview"]["parameters"]["shade_mode"].setValue( 'plastic' )
__children["ViewerSettings"]["Preview"]["parameters"]["color"].setInput( __children["ViewerSettings"]["UserDataRgb"]["out"] )
__children["ViewerSettings"]["Preview"]["__uiPosition"].setValue( imath.V2f( 8.22202301, 9.98861408 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["SubdivisionOptions"], 'annotation:user:text', 'Turns off any view-dependent subdivision settings.' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["SubdivisionOptions"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["ViewerSettings"]["SubdivisionOptions"]["in"].setInput( __children["ViewerSettings"]["SubdivisionAttributes"]["out"] )
__children["ViewerSettings"]["SubdivisionOptions"]["options"]["subdivDicingCamera"]["enabled"].setValue( True )
__children["ViewerSettings"]["SubdivisionOptions"]["options"]["subdivFrustumCulling"]["enabled"].setValue( True )
__children["ViewerSettings"]["SubdivisionOptions"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -100.980225 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'presetNames', IECore.StringVectorData( [ 'CPU', 'GPU' ] ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'presetValues', IECore.StringVectorData( [ 'CPU', 'GPU' ] ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'spreadsheet:columnName', 'renderDeviceValue' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["device"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["DeleteOptions"], 'annotation:user:text', "Deletes all imagers, so they can't mess with our settings.\n" )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["DeleteOptions"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["ViewerSettings"]["DeleteOptions"]["in"].setInput( __children["ViewerSettings"]["SamplingOptions"]["out"] )
__children["ViewerSettings"]["DeleteOptions"]["names"].setValue( 'ai:imager' )
__children["ViewerSettings"]["DeleteOptions"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -138.585373 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["SubdivisionAttributes"], 'annotation:user:text', "Forces object space metric for subdivision, since view-dependent subdivision is not suitable when the view is constantly changing.\n\nSets adaptive error to 0 because :\n\n- We don't know what scale objects are at, so can't set it ourself.\n- It doesn't make sense to reuse raster values the user may have authored, given that we've switched metric to object.\n\nIf user authored a value for `subdiv_iterations`, then clamps it below `maxSubdivIterations`. Otherwise doesn't author a value, so we inherit the global one." )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["SubdivisionAttributes"], 'annotation:user:color', imath.Color3f( 0.150000006, 0.25999999, 0.25999999 ) )
__children["ViewerSettings"]["SubdivisionAttributes"]["in"].setInput( __children["ViewerSettings"]["GlobalSubdivisionAttributes"]["out"] )
__children["ViewerSettings"]["SubdivisionAttributes"]["attributes"]["subdivAdaptiveError"]["enabled"].setValue( True )
__children["ViewerSettings"]["SubdivisionAttributes"]["attributes"]["subdivAdaptiveSpace"]["value"].setValue( 'object' )
__children["ViewerSettings"]["SubdivisionAttributes"]["attributes"]["subdivAdaptiveSpace"]["enabled"].setValue( True )
__children["ViewerSettings"]["SubdivisionAttributes"]["attributes"]["subdivIterations"]["value"].setInput( __children["ViewerSettings"]["Expression"]["__out"]["p0"] )
__children["ViewerSettings"]["SubdivisionAttributes"]["attributes"]["subdivIterations"]["enabled"].setInput( __children["ViewerSettings"]["AttributeQuery"]["exists"] )
__children["ViewerSettings"]["SubdivisionAttributes"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -77.9264984 ) )
__children["ViewerSettings"]["LightingOptions"]["in"].setInput( __children["ViewerSettings"]["ShadingSwitch"]["out"]["value"] )
__children["ViewerSettings"]["LightingOptions"]["options"]["giTotalDepth"].setInput( __children["ViewerSettings"]["LightingSpreadsheet"]["out"]["giTotalDepth"] )
__children["ViewerSettings"]["LightingOptions"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -48.025013 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:Direct', 'direct' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:One Bounce', 'oneBounce' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["lighting"], 'preset:Full', 'full' )
__children["ViewerSettings"]["Backdrop"]["title"].setValue( 'Shading' )
__children["ViewerSettings"]["Backdrop"]["__uiPosition"].setValue( imath.V2f( -3.59827423, 3.58236122 ) )
__children["ViewerSettings"]["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -36.5063324, -35.2866211 ), imath.V2f( 42.5063324, 41.2866211 ) ) )
__children["ViewerSettings"]["LightingSpreadsheet"]["selector"].setInput( __children["ViewerSettings"]["lighting"] )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"]["value"].setValue( 0 )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["name"].setValue( 'direct' )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["cells"]["giTotalDepth"]["value"]["value"].setValue( 0 )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][1]["cells"]["giTotalDepth"]["value"]["enabled"].setValue( True )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][2]["name"].setValue( 'oneBounce' )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][2]["cells"]["giTotalDepth"]["value"]["value"].setValue( 1 )
__children["ViewerSettings"]["LightingSpreadsheet"]["rows"][2]["cells"]["giTotalDepth"]["value"]["enabled"].setValue( True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"], 'spreadsheet:plugMenu:includeAsAncestor', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"], 'spreadsheet:plugMenu:ancestorLabel', 'Value and Switch' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"], 'nameValuePlugPlugValueWidget:ignoreNamePlug', True )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"], 'description', 'The maximum depth of any ray (Diffuse + Specular +\nTransmission + Volume).' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["LightingSpreadsheet"]["rows"][0]["cells"]["giTotalDepth"]["value"], 'label', 'Total Depth' )
__children["ViewerSettings"]["LightingSpreadsheet"]["__uiPosition"].setValue( imath.V2f( -14.7981873, -47.8069382 ) )
__children["ViewerSettings"]["SamplingOptions"]["in"].setInput( __children["ViewerSettings"]["DisableDisplacement"]["out"] )
__children["ViewerSettings"]["SamplingOptions"]["options"]["aaSamples"]["value"].setValue( 6 )
__children["ViewerSettings"]["SamplingOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["ViewerSettings"]["SamplingOptions"]["options"]["enableAdaptiveSampling"]["enabled"].setValue( True )
__children["ViewerSettings"]["SamplingOptions"]["options"]["enableProgressiveRender"]["enabled"].setValue( True )
__children["ViewerSettings"]["SamplingOptions"]["options"]["progressiveMinAASamples"]["value"].setValue( 0 )
__children["ViewerSettings"]["SamplingOptions"]["options"]["progressiveMinAASamples"]["enabled"].setValue( True )
__children["ViewerSettings"]["SamplingOptions"]["options"]["renderDevice"]["enabled"].setValue( True )
__children["ViewerSettings"]["SamplingOptions"]["options"]["renderDevice"]["value"].setInput( __children["ViewerSettings"]["device"] )
__children["ViewerSettings"]["SamplingOptions"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -130.421341 ) )
__children["ViewerSettings"]["Backdrop3"]["title"].setValue( 'Subdivision' )
__children["ViewerSettings"]["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -78.3058624 ) )
__children["ViewerSettings"]["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -35.9162979, -39.3382263 ), imath.V2f( 42.9688263, 18.8090897 ) ) )
__children["ViewerSettings"]["AttributeQuery"]["scene"].setInput( __children["ViewerSettings"]["LightingOptions"]["out"] )
__children["ViewerSettings"]["AttributeQuery"]["location"].setValue( '${scene:path}' )
__children["ViewerSettings"]["AttributeQuery"]["attribute"].setValue( 'ai:polymesh:subdiv_iterations' )
__children["ViewerSettings"]["AttributeQuery"]["__uiPosition"].setValue( imath.V2f( -28.4822407, -67.5809631 ) )
__children["ViewerSettings"]["Expression"]["__in"]["p0"].setInput( __children["ViewerSettings"]["GlobalSubdivisionAttributes"]["attributes"]["subdivIterations"]["value"] )
__children["ViewerSettings"]["Expression"]["__in"]["p1"].setInput( __children["ViewerSettings"]["AttributeQuery"]["value"] )
__children["ViewerSettings"]["Expression"]["__uiPosition"].setValue( imath.V2f( -22.3665657, -77.0962143 ) )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["enableSubdivision"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["maxSubdivIterations"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ViewerSettings"]["enableDisplacement"], 'nodule:type', '' )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"]["in"].setInput( __children["ViewerSettings"]["LightingOptions"]["out"] )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"]["attributes"]["subdivIterations"]["enabled"].setValue( True )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"]["attributes"]["subdivIterations"]["value"].setInput( __children["ViewerSettings"]["Expression2"]["__out"]["p0"] )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"]["global"].setValue( True )
__children["ViewerSettings"]["GlobalSubdivisionAttributes"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -69.7624359 ) )
__children["ViewerSettings"]["DisableDisplacement"]["enabled"].setInput( __children["ViewerSettings"]["Expression1"]["__out"]["p0"] )
__children["ViewerSettings"]["DisableDisplacement"]["in"].setInput( __children["ViewerSettings"]["SubdivisionOptions"]["out"] )
__children["ViewerSettings"]["DisableDisplacement"]["names"].setValue( 'ai:disp*' )
__children["ViewerSettings"]["DisableDisplacement"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -110.988716 ) )
__children["ViewerSettings"]["Expression1"]["__in"]["p0"].setInput( __children["ViewerSettings"]["enableDisplacement"] )
__children["ViewerSettings"]["Expression1"]["__uiPosition"].setValue( imath.V2f( -16.5660267, -110.989594 ) )
__children["ViewerSettings"]["Expression2"]["__in"]["p0"].setInput( __children["ViewerSettings"]["maxSubdivIterations"] )
__children["ViewerSettings"]["Expression2"]["__in"]["p1"].setInput( __children["ViewerSettings"]["enableSubdivision"] )
__children["ViewerSettings"]["Expression2"]["__uiPosition"].setValue( imath.V2f( -16.6399345, -69.9320831 ) )
__children["ViewerSettings"]["Expression"]["__engine"].setValue( 'OSL' )
__children["ViewerSettings"]["Expression"]["__expression"].setValue( 'parent.__out.p0 = min(\n\tparent.__in.p0,\n\tparent.__in.p1\n);\n' )
__children["ViewerSettings"]["Expression1"]["__engine"].setValue( 'OSL' )
__children["ViewerSettings"]["Expression1"]["__expression"].setValue( 'parent.__out.p0 = !parent.__in.p0;' )
__children["ViewerSettings"]["Expression2"]["__engine"].setValue( 'OSL' )
__children["ViewerSettings"]["Expression2"]["__expression"].setValue( 'parent.__out.p0 = parent.__in.p0 * parent.__in.p1;\n' )


del __children

