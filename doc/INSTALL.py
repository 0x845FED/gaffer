#!/usr/bin/env python

import os,sys

build_root = os.getcwd()

gp_cmd = 'gaffer python'
ad_cmd = 'asciidoc -v'
sg_cmd = 'gaffer screenGrabber'
pdf_cmd = 'prince -v'


#build the node reference
os.chdir( os.path.join (build_root, 'GafferNodeReference' ))
messageHeader = '\033[92mGafferNodeReference:\033[0m'

## extract the info from the node metadata
print '%s Generating node descriptions data...' % (messageHeader)
os.system( gp_cmd + ' extractoMatic.py' )

## run asciidoc then convert the result into a pdf
print '%s Processing Asciidoc source...' % (messageHeader)
os.system( ad_cmd + ' GafferNodeReference.txt' )
print '%s Postconverting html to pdf...' % (messageHeader)
os.system( pdf_cmd + ' GafferNodeReference.html GafferNodeReference.pdf' )

print '%s Done.' % (messageHeader)



#build the user guide
os.chdir( os.path.join( build_root, 'GafferUserGuide' ))
messageHeader = '\033[92mGafferUserGuide:\033[0m'


##generate images from reference scripts
source_dir = os.path.join( build_root, 'GafferUserGuide', 'images', 'autoGenerated_source' )
target_dir = os.path.join( build_root, 'GafferUserGuide', 'images', 'autoGenerated_target' )
for source in os.listdir( source_dir ):
	if source.endswith('.gfr'):
		print( "Processing [ %s ]" % ( source ) )
		target_img = source[:-4] + ".png"
		sg_cmd_full = "%s -script %s -image %s" % \
						(sg_cmd, os.path.join( source_dir, source ), os.path.join( target_dir, target_img ) )
		print( sg_cmd_full )
		os.system( sg_cmd_full )
    

## run asciidoc then convert the result into a pdf
print '%s Processing Asciidoc source...' % (messageHeader)
os.system( ad_cmd + " GafferUserGuide.txt" )
print '%s Postconverting html to pdf...' % (messageHeader)
os.system( pdf_cmd + " GafferUserGuide.html GafferUserGuide.pdf" )

print '%s Done.' % (messageHeader)

