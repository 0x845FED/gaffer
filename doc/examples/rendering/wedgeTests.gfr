import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 54, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName" ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory" ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort" ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ShaderAssignment_sphere"] = GafferScene.ShaderAssignment( "ShaderAssignment_sphere" )
parent.addChild( __children["ShaderAssignment_sphere"] )
__children["ShaderAssignment_sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"] = GafferDispatch.Wedge( "MetallicWedge" )
parent.addChild( __children["MetallicWedge"] )
__children["MetallicWedge"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"].clearPoints()
__children["MetallicWedge"]["ramp"].addChild( Gaffer.ValuePlug( "p0", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"]["p0"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"]["p0"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"].addChild( Gaffer.ValuePlug( "p1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"]["p1"].addChild( Gaffer.FloatPlug( "x", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"]["ramp"]["p1"].addChild( Gaffer.Color3fPlug( "y", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["MetallicWedge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveAppleseedRender"] = GafferAppleseed.InteractiveAppleseedRender( "InteractiveAppleseedRender" )
parent.addChild( __children["InteractiveAppleseedRender"] )
__children["InteractiveAppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"] = GafferScene.Outputs( "Outputs2" )
parent.addChild( __children["Outputs2"] )
__children["Outputs2"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize" ) )
__children["Outputs2"]["outputs"].addChild( Gaffer.ValuePlug( "output2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayPort", Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayPort" ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "displayHost", Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "displayHost" ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "remoteDisplayType", Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "remoteDisplayType" ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "driverType", Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "driverType" ) )
__children["Outputs2"]["outputs"]["output2"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize" ) )
__children["Outputs2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables"] = Gaffer.ContextVariables( "ContextVariables" )
parent.addChild( __children["ContextVariables"] )
__children["ContextVariables"].setup( GafferScene.ScenePlug( "in", ) )
__children["ContextVariables"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.FloatPlug( "value", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1" ) )
__children["ContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferImage.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"] = Gaffer.Box( "Scene" )
parent.addChild( __children["Scene"] )
__children["Scene"].addChild( GafferScene.Sphere( "Sphere" ) )
__children["Scene"]["Sphere"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Plane( "Plane" ) )
__children["Scene"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Group( "Group" ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.Camera( "Camera" ) )
__children["Scene"]["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferAppleseed.AppleseedLight( "hosek_environment_edf" ) )
__children["Scene"]["hosek_environment_edf"].loadShader( "hosek_environment_edf" )
__children["Scene"]["hosek_environment_edf"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Scene"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Scene"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.PathFilter( "PathFilter2" ) )
__children["Scene"]["PathFilter2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment_plane" ) )
__children["Scene"]["ShaderAssignment_plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"]["ShaderAssignment_plane"].addChild( Gaffer.V2fPlug( "__uiPosition1", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Scene"]["as_disney_material"].loadShader( "as_disney_material" )
__children["Scene"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Scene"].addChild( GafferOSL.OSLShader( "as_closure2surface" ) )
__children["Scene"]["as_closure2surface"].loadShader( "as_closure2surface" )
__children["Scene"]["as_closure2surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"] = Gaffer.Box( "Options" )
parent.addChild( __children["Options"] )
__children["Options"].addChild( GafferScene.StandardOptions( "StandardOptions" ) )
__children["Options"]["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( GafferScene.ScenePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( GafferAppleseed.AppleseedOptions( "AppleseedOptions" ) )
__children["Options"]["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Options"]["BoxIn"].setup( GafferScene.ScenePlug( "out", ) )
__children["Options"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Options"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Options"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Options"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"] = Gaffer.Backdrop( "Backdrop2" )
parent.addChild( __children["Backdrop2"] )
__children["Backdrop2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand_removeBeauty"] = GafferDispatch.SystemCommand( "SystemCommand_removeBeauty" )
parent.addChild( __children["SystemCommand_removeBeauty"] )
__children["SystemCommand_removeBeauty"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SystemCommand_removeBeauty"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"] = Gaffer.Backdrop( "Backdrop3" )
parent.addChild( __children["Backdrop3"] )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"] = Gaffer.Backdrop( "Backdrop4" )
parent.addChild( __children["Backdrop4"] )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.NameValuePlug( "quantize", Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "quantize" ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"] = Gaffer.Backdrop( "Backdrop5" )
parent.addChild( __children["Backdrop5"] )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"] = Gaffer.Expression( "Expression1" )
parent.addChild( __children["Expression1"] )
__children["Expression1"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, minValue = 0.0, maxValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"] = Gaffer.Backdrop( "Backdrop6" )
parent.addChild( __children["Backdrop6"] )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop6"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"] = Gaffer.Backdrop( "Backdrop7" )
parent.addChild( __children["Backdrop7"] )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop7"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader1"] = GafferImage.ImageReader( "ImageReader1" )
parent.addChild( __children["ImageReader1"] )
__children["ImageReader1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"] = Gaffer.Backdrop( "Backdrop8" )
parent.addChild( __children["Backdrop8"] )
__children["Backdrop8"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop8"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"] = Gaffer.Backdrop( "Backdrop9" )
parent.addChild( __children["Backdrop9"] )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop9"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"] = Gaffer.Backdrop( "Backdrop10" )
parent.addChild( __children["Backdrop10"] )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop10"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"] = Gaffer.Backdrop( "Backdrop11" )
parent.addChild( __children["Backdrop11"] )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop11"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"] = Gaffer.Backdrop( "Backdrop12" )
parent.addChild( __children["Backdrop12"] )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop12"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"] = Gaffer.Backdrop( "Backdrop13" )
parent.addChild( __children["Backdrop13"] )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound2", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound3", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound4", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.Box2fPlug( "__uiBound5", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop13"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_disney_material"] = GafferOSL.OSLShader( "as_disney_material" )
parent.addChild( __children["as_disney_material"] )
__children["as_disney_material"].loadShader( "as_disney_material" )
__children["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["as_closure2surface"] = GafferOSL.OSLShader( "as_closure2surface" )
parent.addChild( __children["as_closure2surface"] )
__children["as_closure2surface"].loadShader( "as_closure2surface" )
__children["as_closure2surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frameRange"]["start"].setValue( 0 )
parent["frameRange"]["end"].setValue( 5 )
parent["frame"].setValue( 0.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 37227 )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
__children["defaultFormat"].setValue( GafferImage.Format( 1920, 1080, 1.000 ) )
__children["ShaderAssignment_sphere"]["in"].setInput( __children["Scene"]["out"] )
__children["ShaderAssignment_sphere"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["ShaderAssignment_sphere"]["shader"].setInput( __children["as_closure2surface"]["out"] )
__children["ShaderAssignment_sphere"]["__uiPosition"].setValue( imath.V2f( 36.2674637, 3.79905796 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/group/sphere' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 49.6360474, 11.2114239 ) )
__children["MetallicWedge"]["preTasks"]["preTask0"].setInput( __children["SystemCommand_removeBeauty"]["task"] )
__children["MetallicWedge"]["variable"].setValue( 'wedge:metallic' )
__children["MetallicWedge"]["indexVariable"].setValue( 'wedge:metallicIndex' )
__children["MetallicWedge"]["floatSteps"].setValue( 5 )
__children["MetallicWedge"]["ramp"]["p1"]["x"].setValue( 1.0 )
__children["MetallicWedge"]["ramp"]["p1"]["y"].setValue( imath.Color3f( 1, 1, 1 ) )
__children["MetallicWedge"]["__uiPosition"].setValue( imath.V2f( 38.367466, -152.390381 ) )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/examples/wedgeTests/wedgeTests.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( 34.7674637, -83.6641998 ) )
__children["Backdrop1"]["title"].setValue( 'Wedge Tests' )
__children["Backdrop1"]["scale"].setValue( 1.5 )
__children["Backdrop1"]["description"].setValue( 'In this example, we demonstrate how to use the Wedge node to render a scene multiple times with varying shader values.' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -38.3865891, 92.0714722 ), imath.V2f( 21.8798447, 114.615646 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( -15.2881737, -66.5774078 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/examples/wedgeTests' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( -8.13601208, -44.4543266 ) )
__children["InteractiveAppleseedRender"]["in"].setInput( __children["Outputs2"]["out"] )
__children["InteractiveAppleseedRender"]["__uiPosition"].setValue( imath.V2f( 10.7020931, -45.1578827 ) )
__children["Outputs2"]["in"].setInput( __children["ContextVariables"]["out"] )
__children["Outputs2"]["outputs"]["output1"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs2"]["outputs"]["output1"]["active"].setValue( False )
__children["Outputs2"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.${wedge:roughnessIndex}.exr' )
__children["Outputs2"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["Outputs2"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs2"]["outputs"]["output2"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs2"]["outputs"]["output2"]["fileName"].setValue( 'beauty' )
__children["Outputs2"]["outputs"]["output2"]["type"].setValue( 'ieDisplay' )
__children["Outputs2"]["outputs"]["output2"]["data"].setValue( 'rgba' )
__children["Outputs2"]["__uiPosition"].setValue( imath.V2f( 10.7020931, -39.4938202 ) )
__children["ContextVariables"]["variables"]["member1"]["name"].setValue( 'wedge:metallic' )
__children["ContextVariables"]["variables"]["member1"]["value"].setValue( 0.5 )
__children["ContextVariables"]["in"].setInput( __children["Options"]["out"] )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["ContextVariables"]["out"], 'noduleLayout:section', 'bottom' )
__children["ContextVariables"]["__uiPosition"].setValue( imath.V2f( 10.7020931, -25.5214729 ) )
__children["ImageWriter"]["preTasks"]["preTask0"].setInput( __children["AppleseedRender"]["task"] )
__children["ImageWriter"]["in"].setInput( __children["Text"]["out"] )
__children["ImageWriter"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/output.${wedge:metallicIndex}.exr' )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( 36.9674606, -112.001328 ) )
__children["ImageReader"]["fileName"].setInput( __children["Outputs"]["outputs"]["output1"]["fileName"] )
__children["ImageReader"]["refreshCount"].setValue( 4 )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 42.4005661, -98.1732025 ) )
__children["Text"]["out"].setInput( __children["Text"]["__merge"]["out"] )
__children["Text"]["in"].setInput( __children["ImageReader"]["out"] )
__children["Text"]["text"].setValue( 'Metallic: ${wedge:metallic}' )
__children["Text"]["size"].setValue( imath.V2i( 10, 10 ) )
__children["Text"]["area"].setValue( imath.Box2i( imath.V2i( 5, 5 ), imath.V2i( 118, 118 ) ) )
__children["Text"]["verticalAlignment"].setValue( 0 )
__children["Text"]["__uiPosition"].setValue( imath.V2f( 42.4005661, -103.837265 ) )
__children["Scene"]["Sphere"]["transform"]["translate"].setValue( imath.V3f( 0, 1, 0 ) )
__children["Scene"]["Sphere"]["__uiPosition"].setValue( imath.V2f( -3.51795197, 42.1357956 ) )
__children["Scene"]["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Scene"]["Plane"]["transform"]["scale"]["x"].setValue( 10000.0 )
__children["Scene"]["Plane"]["transform"]["scale"]["y"].setInput( __children["Scene"]["Plane"]["transform"]["scale"]["x"] )
__children["Scene"]["Plane"]["transform"]["scale"]["z"].setInput( __children["Scene"]["Plane"]["transform"]["scale"]["x"] )
__children["Scene"]["Plane"]["__uiPosition"].setValue( imath.V2f( 9.77898598, 42.1357956 ) )
__children["Scene"]["Group"]["in"]["in0"].setInput( __children["Scene"]["Sphere"]["out"] )
__children["Scene"]["Group"]["in"]["in1"].setInput( __children["Scene"]["Plane"]["out"] )
__children["Scene"]["Group"]["in"]["in2"].setInput( __children["Scene"]["hosek_environment_edf"]["out"] )
__children["Scene"]["Group"]["in"]["in3"].setInput( __children["Scene"]["Camera"]["out"] )
__children["Scene"]["Group"]["__uiPosition"].setValue( imath.V2f( 15.5016346, 29.9952011 ) )
__children["Scene"]["out"].setInput( __children["Scene"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["out"], 'description', 'The processed output scene.' )
__children["Scene"]["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 3.36919999, 3.12817955 ) )
__children["Scene"]["Camera"]["transform"]["rotate"].setValue( imath.V3f( -42.4705009, 0, 0 ) )
__children["Scene"]["Camera"]["renderSettingOverrides"]["filmFit"]["value"].setValue( 2 )
__children["Scene"]["Camera"]["renderSettingOverrides"]["filmFit"]["enabled"].setValue( True )
__children["Scene"]["Camera"]["__uiPosition"].setValue( imath.V2f( 42.7236404, 42.1357956 ) )
__children["Scene"]["hosek_environment_edf"]["parameters"]["sun_phi"].setValue( 120.0 )
__children["Scene"]["hosek_environment_edf"]["parameters"]["turbidity_multiplier"].setValue( 0.20000000298023224 )
__children["Scene"]["hosek_environment_edf"]["parameters"]["luminance_multiplier"].setValue( 3.0 )
__children["Scene"]["hosek_environment_edf"]["parameters"]["saturation_multiplier"].setValue( 0.10000000149011612 )
__children["Scene"]["hosek_environment_edf"]["parameters"]["ground_albedo"].setValue( 0.10000000149011612 )
__children["Scene"]["hosek_environment_edf"]["__uiPosition"].setValue( imath.V2f( 25.3184929, 42.4943199 ) )
__children["Scene"]["BoxOut"]["in"].setInput( __children["Scene"]["ShaderAssignment_plane"]["out"] )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Scene"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Scene"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 17.0016346, -1.77281177 ) )
__children["Scene"]["__uiPosition"].setValue( imath.V2f( 37.7910919, 27.2936344 ) )
__children["Scene"]["PathFilter2"]["paths"].setValue( IECore.StringVectorData( [ '/group/plane' ] ) )
__children["Scene"]["PathFilter2"]["__uiPosition"].setValue( imath.V2f( 27.0569019, 23.6237259 ) )
__children["Scene"]["ShaderAssignment_plane"]["in"].setInput( __children["Scene"]["Group"]["out"] )
__children["Scene"]["ShaderAssignment_plane"]["filter"].setInput( __children["Scene"]["PathFilter2"]["out"] )
__children["Scene"]["ShaderAssignment_plane"]["shader"].setInput( __children["Scene"]["as_closure2surface"]["out"] )
__children["Scene"]["ShaderAssignment_plane"]["__uiPosition"].setValue( imath.V2f( 15.5462675, 17.5742226 ) )
__children["Scene"]["as_disney_material"]["parameters"]["in_color"].setValue( imath.Color3f( 0.379999995, 0.379999995, 0.379999995 ) )
__children["Scene"]["as_disney_material"]["parameters"]["in_specular_amount"].setValue( 0.0 )
__children["Scene"]["as_disney_material"]["parameters"]["in_roughness"].setValue( 1.0 )
__children["Scene"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -20.691555, 16.3742218 ) )
__children["Scene"]["as_closure2surface"]["parameters"]["in_input"].setInput( __children["Scene"]["as_disney_material"]["out"]["out_outColor"] )
__children["Scene"]["as_closure2surface"]["__uiPosition"].setValue( imath.V2f( -3.85339069, 17.5742226 ) )
__children["Options"]["StandardOptions"]["in"].setInput( __children["Options"]["BoxIn"]["out"] )
__children["Options"]["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["Options"]["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["Options"]["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 128, 128 ) )
__children["Options"]["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["Options"]["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 36.2910919, -30.4657784 ) )
__children["Options"]["in"].setInput( __children["ShaderAssignment_sphere"]["out"] )
Gaffer.Metadata.registerValue( __children["Options"]["in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Options"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Options"]["in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Options"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Options"]["in"], 'noduleLayout:spacing', 2.0 )
__children["Options"]["AppleseedOptions"]["in"].setInput( __children["Options"]["StandardOptions"]["out"] )
__children["Options"]["AppleseedOptions"]["options"]["renderPasses"]["value"].setValue( 10 )
__children["Options"]["AppleseedOptions"]["options"]["renderPasses"]["enabled"].setValue( True )
__children["Options"]["AppleseedOptions"]["options"]["environmentEDF"]["value"].setValue( '/group/light' )
__children["Options"]["AppleseedOptions"]["options"]["environmentEDF"]["enabled"].setValue( True )
__children["Options"]["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( 36.2910919, -36.1298409 ) )
__children["Options"]["out"].setInput( __children["Options"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Options"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Options"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Options"]["out"], 'description', 'The processed output scene.' )
__children["Options"]["BoxIn"]["__in"].setInput( __children["Options"]["in"] )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'description', 'The input scene' )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Options"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["Options"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( 36.2910919, -20.5696869 ) )
__children["Options"]["BoxOut"]["in"].setInput( __children["Options"]["AppleseedOptions"]["out"] )
Gaffer.Metadata.registerValue( __children["Options"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Options"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Options"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Options"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Options"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 37.7902985, -44.4618721 ) )
__children["Options"]["__uiPosition"].setValue( imath.V2f( 37.7674637, -17.1894417 ) )
Gaffer.Metadata.registerValue( __children["Backdrop2"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop2"]["title"].setValue( '' )
__children["Backdrop2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.1164627, -19.2602482 ), imath.V2f( 101.867485, 12.2453175 ) ) )
__children["Backdrop2"]["__uiPosition"].setValue( imath.V2f( -43.7835617, 8.10569572 ) )
__children["SystemCommand_removeBeauty"]["preTasks"]["preTask0"].setInput( __children["ImageWriter"]["task"] )
__children["SystemCommand_removeBeauty"]["command"].setValue( 'rm ${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.exr' )
__children["SystemCommand_removeBeauty"]["__uiPosition"].setValue( imath.V2f( 37.6674652, -132.930054 ) )
Gaffer.Metadata.registerValue( __children["Backdrop3"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop3"]["title"].setValue( '' )
__children["Backdrop3"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -10.6082783 ), imath.V2f( 65.2365189, 10 ) ) )
__children["Backdrop3"]["__uiPosition"].setValue( imath.V2f( -43.1276703, -24.4362621 ) )
Gaffer.Metadata.registerValue( __children["Backdrop4"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop4"]["title"].setValue( '' )
__children["Backdrop4"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 4.16482925, -18.1980286 ), imath.V2f( 91.8100662, 11.3694763 ) ) )
__children["Backdrop4"]["__uiPosition"].setValue( imath.V2f( -37.483078, -101.642609 ) )
__children["Outputs"]["in"].setInput( __children["Options"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.exr' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'exr' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 36.2674637, -67.0739136 ) )
Gaffer.Metadata.registerValue( __children["Backdrop5"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop5"]["title"].setValue( '' )
__children["Backdrop5"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -13.9212952, -14.0062332 ), imath.V2f( 73.7884979, 10.0430069 ) ) )
__children["Backdrop5"]["__uiPosition"].setValue( imath.V2f( -19.3206863, -64.6790771 ) )
__children["Expression1"]["__uiPosition"].setValue( imath.V2f( -14.1134748, 5.01595497 ) )
Gaffer.Metadata.registerValue( __children["Backdrop6"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop6"]["title"].setValue( '' )
__children["Backdrop6"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 7.62612152, -8.44258881 ), imath.V2f( 95.3143158, 6.37140656 ) ) )
__children["Backdrop6"]["__uiPosition"].setValue( imath.V2f( -40.7198067, -132.71637 ) )
Gaffer.Metadata.registerValue( __children["Backdrop7"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop7"]["title"].setValue( '' )
__children["Backdrop7"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 5.62234879, -4.40658569 ), imath.V2f( 93.1638641, 10.0430069 ) ) )
__children["Backdrop7"]["__uiPosition"].setValue( imath.V2f( -38.5693512, -154.942688 ) )
__children["ImageReader1"]["fileName"].setValue( '${project:rootDirectory}/renders/examples/wedgeTests/beauty/output.#.exr' )
__children["ImageReader1"]["refreshCount"].setValue( 1 )
__children["ImageReader1"]["start"]["mode"].setValue( 2 )
__children["ImageReader1"]["end"]["mode"].setValue( 2 )
__children["ImageReader1"]["end"]["frame"].setValue( 5 )
__children["ImageReader1"]["__uiPosition"].setValue( imath.V2f( 38.8510246, -164.436371 ) )
Gaffer.Metadata.registerValue( __children["Backdrop8"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop8"]["title"].setValue( 'Driving the Shader Parameters' )
__children["Backdrop8"]["description"].setValue( "We make use of the context to drive shader plugs. If you're not familiar with the concept of the Gaffer context, in a nutshell it contains information about which location and frame is currently being computed along with any custom data downstream nodes may have set.\n\nIn order to ramp the value of the shader across several renders, we use a Wedge node at the end of the graph, which repeatedly executes the upstream graph with a range of values in a context variable for us.\n\nIn this example, we want to render a wedge for the shader's 'Metallicness' parameter, so we drive this parameter with an Expression node that refers to the context variable set by the downstream Wedge node.\n\nNOTE: When writing OSL code in an Expressions node, make sure you use a float for the default if you need float values." )
__children["Backdrop8"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -19.0496788 ), imath.V2f( 45.3029099, 11.6291676 ) ) )
__children["Backdrop8"]["__uiPosition"].setValue( imath.V2f( -58.9453049, 7.92503262 ) )
Gaffer.Metadata.registerValue( __children["Backdrop9"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop9"]["title"].setValue( 'Preview Renders' )
__children["Backdrop9"]["description"].setValue( 'Wedge nodes are designed for batch dispatching, and so it can be difficult to preview their results from within the Gaffer application. For the Wedge node in this graph, you will only be able to run an interactive render using the default value for its context - which is nothing!\n\nBy adding a ContextVariables node that uses the same variable name as the Wedge node, we can specify a working value for our Metallic parameter that is only used for Interactive renders.' )
__children["Backdrop9"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -9.34815598 ), imath.V2f( 45.2143784, 10 ) ) )
__children["Backdrop9"]["__uiPosition"].setValue( imath.V2f( -42.6004028, -24.9779625 ) )
Gaffer.Metadata.registerValue( __children["Backdrop10"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop10"]["title"].setValue( 'Output Path' )
__children["Backdrop10"]["description"].setValue( 'We need to ensure the render for each ramp value is saved to a unique file. The Wedge node allow us to do this, as it sets an additional variable that contains the number of the render in the range of the ramp. We can simply use this in the Outputs node\'s File Name plug (inside the Batch/Beauty output) to make sure each iteration is unique. In this case the variable to use is "${wedge:metallicIndex}"\n\nThe final output path is: "${project:rootDirectory}/renders/examples/wedgeTests/beauty/beauty.${wedge:metallicIndex}.exr"\n\n' )
__children["Backdrop10"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -13.9212952, -12.682476 ), imath.V2f( 43.3652649, 10.0430069 ) ) )
__children["Backdrop10"]["__uiPosition"].setValue( imath.V2f( -18.73316, -64.9413757 ) )
Gaffer.Metadata.registerValue( __children["Backdrop11"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop11"]["title"].setValue( 'Parameter Value Burn-in' )
__children["Backdrop11"]["description"].setValue( "It's often convenient when reviewing Wedge renders to know what value was used for each frame. We can make use of Gaffer's image nodes to burn in some text of the parameter name and value onto the renders.\n\nThis demonstrates how, even when the type of data flowing through the graph changes, the context in which it is evaluated in always ripples up from the node being executed. This allows the context variables set by the downstream Wedge node to control multiple aspects of the render -> composite process at once. The Text node references the same variable as the shader parameter plug's expression, so it will always be in sync.\n\nThe execution nodes in Gaffer, which are typically red, are task nodes. These can be chained together to form a series of operations. So, when the Wedge node executes, Gaffer will have made sure the ImageWriter and preceding AppleseedRender node have already been executed, in the requested context." )
__children["Backdrop11"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 4.16482925, -17.3254013 ), imath.V2f( 63.6761055, 11.3694763 ) ) )
__children["Backdrop11"]["__uiPosition"].setValue( imath.V2f( -36.9038315, -102.042038 ) )
Gaffer.Metadata.registerValue( __children["Backdrop12"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop12"]["title"].setValue( 'Clean up working files (optional)' )
__children["Backdrop12"]["description"].setValue( "As we don't need the oridinal render (now we have our burn-in). We can use the SystemCommand\nTask to take care of deleting those intermediate renders." )
__children["Backdrop12"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 7.62612152, -7.58981323 ), imath.V2f( 64.7146454, 6.37140656 ) ) )
__children["Backdrop12"]["__uiPosition"].setValue( imath.V2f( -40.4838257, -133.045593 ) )
Gaffer.Metadata.registerValue( __children["Backdrop13"], 'nodeGadget:color', imath.Color3f( 0.368000001, 0.400000006, 0.359999985 ) )
__children["Backdrop13"]["title"].setValue( 'Render the Wedge' )
__children["Backdrop13"]["description"].setValue( "Right-click on the MetallicWedge node and click 'Execute' to render  the  ramp." )
__children["Backdrop13"]["__uiBound"].setValue( imath.Box2f( imath.V2f( 5.62234879, -3.33480835 ), imath.V2f( 62.358757, 10.0430069 ) ) )
__children["Backdrop13"]["__uiPosition"].setValue( imath.V2f( -37.994175, -155.492065 ) )
__children["as_disney_material"]["parameters"]["in_metallic_amount"].setInput( __children["Expression1"]["__out"]["p0"] )
__children["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -4.3152895, 2.59905791 ) )
__children["as_closure2surface"]["parameters"]["in_input"].setInput( __children["as_disney_material"]["out"]["out_outColor"] )
__children["as_closure2surface"]["__uiPosition"].setValue( imath.V2f( 16.4932938, 3.79905796 ) )
__children["Expression1"]["__engine"].setValue( 'OSL' )
__children["Expression1"]["__expression"].setValue( 'parent.__out.p0 = context("wedge:metallic", 0.0)' )


del __children

