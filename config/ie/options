##########################################################################
#  
#  Copyright (c) 2011, Image Engine Design Inc. All rights reserved.
#  
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are
#  met:
#  
#      * Redistributions of source code must retain the above
#        copyright notice, this list of conditions and the following
#        disclaimer.
#  
#      * Redistributions in binary form must reproduce the above
#        copyright notice, this list of conditions and the following
#        disclaimer in the documentation and/or other materials provided with
#        the distribution.
#  
#      * Neither the name of John Haddon nor the names of
#        any other contributors to this software may be used to endorse or
#        promote products derived from this software without specific prior
#        written permission.
#  
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
#  IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
#  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#  
##########################################################################

import os
import IEEnv

##########################################################################
# get arguments and other stuff to help us configure things
##########################################################################

def getOption( name, default ) :

	import sys
	result = default
	for a in sys.argv:
		if a[:len(name)+1]==name+"=" :	
			result = a[len(name)+1:]

	return result	

cortexMajorVersion = getOption( "CORTEX_MAJOR_VERSION", os.environ["CORTEX_MAJOR_VERSION"] )
cortexReg = IEEnv.registry["libraries"]["cortex"][cortexMajorVersion]
compiler = getOption( "COMPILER", IEEnv.registry["platformDefaults"][IEEnv.platform()]["compiler"] )
compilerVersion = getOption( "COMPILER", IEEnv.registry["platformDefaults"][IEEnv.platform()]["compilerVersion"] )
pythonVersion = cortexReg["preferredPythonVersion"]
pythonReg = IEEnv.registry['apps']['python'][pythonVersion][IEEnv.platform()]

##########################################################################
# set where we'll put things
##########################################################################

versionString = "${GAFFER_MAJOR_VERSION}.${GAFFER_MINOR_VERSION}.${GAFFER_PATCH_VERSION}"
if getOption( "RELEASE", "0" )=="1" :
	buildRoot = "/tmp/gafferBuilds"
	installRoot = "/software"
else :
	buildRoot = os.path.expanduser( "~" )
	installRoot = os.path.expanduser( "~/gafferTestInstalls" )
	versionString += "dev"

BUILD_DIR = buildRoot + "/apps/gaffer/" + versionString + "/" + IEEnv.platform()
INSTALL_DIR = installRoot + "/apps/gaffer/" + versionString + "/" + IEEnv.platform()

##########################################################################
# get include locations right
##########################################################################

LOCATE_DEPENDENCY_CPPPATH = [

	os.path.join( IEEnv.Environment.rootPath(), "tools", "include", IEEnv.platform(), "cortex", cortexMajorVersion ),
	os.path.join( IEEnv.Environment.rootPath(), "tools", "include", "OpenEXR", cortexReg["OpenEXRVersion"] ),
	os.path.join( IEEnv.Environment.rootPath(), "tools", "include", IEEnv.platform(), "tbb", cortexReg["tbbVersion"] ),
	os.path.join( IEEnv.Environment.rootPath(), "tools", "include", IEEnv.platform(), "boost", cortexReg["boostVersion"] ),
	os.path.join( pythonReg["location"], compiler, compilerVersion, pythonReg["include"], "python" + pythonVersion )

]

if getOption( "RELEASE", "0" )=="0" :

	LOCATE_DEPENDENCY_CPPPATH.insert(
		0,
		os.path.join( os.path.expanduser( "~" ), "tools", "include", IEEnv.platform(), "cortex", cortexMajorVersion )
	)
	
##########################################################################
# get lib locations right
##########################################################################

LOCATE_DEPENDENCY_LIBPATH = [

	os.path.join( IEEnv.Environment.rootPath(), "tools", "lib", IEEnv.platform(), compiler, compilerVersion ),

]

if getOption( "RELEASE", "0" )=="0" :

	LOCATE_DEPENDENCY_LIBPATH.insert(
		0,
		os.path.join( os.path.expanduser( "~" ), "tools", "lib", IEEnv.platform(), compiler, compilerVersion ),
	)
	
##########################################################################
# figure out the lib suffixes
##########################################################################

compilerVersionSplit = compilerVersion.split( "." )
boostVersionSplit = cortexReg["boostVersion"].split( "." )

BOOST_LIB_SUFFIX = "-" + compiler + compilerVersionSplit[0] + compilerVersionSplit[1] + "-mt-" + "_".join( boostVersionSplit[0:2] )

CORTEX_LIB_SUFFIX = "-" + cortexMajorVersion
CORTEX_PYTHON_LIB_SUFFIX = "-" + cortexMajorVersion + "-python" + pythonVersion

# we set this so that LD_LIBRARY_PATH will point where we want it
# when the gaffer sconstruct invokes the cortex sconstruct
#os.environ["IEENV_LIBRARY_PREFIX_PATH"] = BUILD_DIR + "/lib"

# we need these imported so scons runs ok when we invoke the cortex build
ENV_VARS_TO_IMPORT="PATH PYTHONPATH IEENV_ROOT IEENV_DISABLE_WRAPPER_ENV_CHECK IEENV_WORKING_PATH  DOXYGEN_VERSION"

# the output is pretty tedious without this disabled
os.environ["IEENV_DISABLE_WRAPPER_ENV_CHECK"] = "1"

# speed up the build a bit hopefully.
BUILD_CACHEDIR = os.environ["IEBUILD_CACHEDIR"]
