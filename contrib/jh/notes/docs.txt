Box3fPlug vs AtomicBox3fPlug
============================

For inputs you might like the Box3fPlug - to allow individual keyframing/expressioning etc of the different components.

For outputs where the whole box is computed as one you should definitely use the AtomicBox3fPlug, because otherwise you are repeating the same calculation each time you are asked for a single component. Gaffer will only ever ever ever allow one plug to be set in compute(). This will not change. If you really want to have a Box3fPlug output, but your computation is atomic, then consider having a hidden AtomicBox3fPlug for which you perform the computation (whcih will be cached (when we have caching) and then implement the compute for the components of the actual Box3fPlug output to read from this cached plug.

Anatomy of the main GUI application
===================================

scripts, nodes, plugs, clipboard, windows

Plugins
=======

As Gaffer is heavily python based, a Gaffer plugin is in fact just a standard Python module.

Computation architecture
========================

Nodes. Contexts. Dirty propagation.