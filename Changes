* Can now derive from ScriptNode in python and override acceptsChild etc as expected.

* ScrolledContainer class has now been ported to the Qt based GafferUI.

* Added a GafferUI.Image class for displaying images in a widget.

* GafferUI.Menu class now supports checkBox menu items again.

* GafferUI.CheckBox widget now displayed with a tick rather than a blank yellow box.

* CompoundNumericPlugValueWidget has now been ported to the Qt based GafferUI, providing uis for V2f, V3f, V2i and V3i plug types.

* GafferUI.Widget derived classes may now pass a GafferUI.Widget instead of a QtGui.QWidget instance to the base class constructor. This makes it possible to develop a wider variety of custom widgets without resorting to Qt APIs.

0.6.0
-----

* Can now specify whether to use PySide or PyQt for Qt python bindings, using the GAFFERUI_QT_BINDINGS environment variable.

0.5.0
-----

* Added a new OpDialogue class to make it easy to run ops.

* Added a new op application, to allow users to run ops in a gui.

* NodeEditor.registerNodeUI has been moved to NodeUI.registerNodeUI, and a NodeUI.create factory functiona added. This allows NodeUIs to be used in places other than the NodeEditor. 

0.4.0
-----

* Can now derive from GraphComponent in python and override acceptsParent and acceptsChild methods. These methods can also be overridden in other python-derivable classes such as Plug and Node.

* Can now derive from CompoundPlug in python.

0.3.0
-----

* ParameterisedHolders now allow some Parameters to opt out of representation as a Plug by adding a "noHostMapping" user data item with a value of BoolData( True ).

* Can now implement and use ParameterHandlers in python.

* Ctrl-C now correctly kills Gaffer

* Fixed type registration for TypedObjectPlugs.

* Fixed NodeEditor lag when selecting several nodes in the GraphEditor.

* Added a factory mechanism for Nodules, allowing different nodules to be used for different plugs. Used this to implement an ArrayNodule type which allows connections to the children of a CompoundPlug to be managed. The code below can be used to demonstrate this :

	import GafferUI
	GafferUI.Nodule.registerNodule( Gaffer.Node.staticTypeId(), "c", GafferUI.ArrayNodule )

	n = Gaffer.Node()

	n.addChild( Gaffer.CompoundPlug( "c" ) )
	n["c"].addChild( Gaffer.IntPlug( "a" ) )
	n["c"].addChild( Gaffer.IntPlug( "b" ) )
	n["c"].addChild( Gaffer.IntPlug( "c" ) )

	addChild( n )

	n2 = Gaffer.Node()
	n2.addChild( Gaffer.IntPlug( "o", Gaffer.Plug.Direction.Out ) )

	addChild( n2 )

* Fixed bug which caused "RuntimeError: Internal C++ object (PySide.QtGui.QLineEdit) already deleted." messages to be displayed.
